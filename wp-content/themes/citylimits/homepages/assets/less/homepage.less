@import (reference) "../../../less/_variables.less";
@import (reference) "../../../less/top-tag.less";
@import (reference) "../../../less/mixin-bracket-borders.less";

#main aside {
  margin-bottom: 4.5rem!important;
}
.stories article {
  border-bottom: none; // a reset of Largo's default
}

#homepage-featured {
  margin-bottom: 4.5rem;
  .excerpt * {
    font-size: 16px; // .sg-excerpt();
  }
  #top-story {
    border-bottom: none;
    .inner {
      background: @white;
      padding-left: @measure;
      padding-right: @measure;
      padding-top: 0;
      box-sizing: border-box;
      margin-left: auto;
      margin-right: auto;
      border-top: 1px solid @grey1;
      border-left: 1px solid @grey1;
      border-right: 1px solid @grey1;


      // necessary for creating new stacking context, for the backgrounds
      position: relative;
      .excerpt, 
      .byline {
        padding: 0rem 2rem;
      }
    }
    .top-tag {
      // this inherits a lot of styles from the main sitewide stylesheet
      margin-top: -0.5 * @measure;
      .tt-fancy();
    }

    h2 {
      font-size: 1.5 * @measure;
      margin-bottom: 1 * @measure;
      padding: 1.5rem 2rem 0;
      line-height: 1.35;
    }
    // what if there's no .top-tag to provide spacing above the h2?
    h2:first-child {
      margin-top: 0.5 * @measure;
    }
    a.img {
      //z-index: 5;
      display: block;
    }
  }
  #featured {
    .top-tag {
      .tt-plain();
      margin-bottom: @measure;
    }
    a.img {
      max-width: 80px;
      margin-top: 0;
    }

    .widgettitle,
    article h2 {
      font-size: 1.1rem;
      line-height: 1.5;
      margin-bottom: @measure;
    }
    article h2 {
      max-width: 80%;
    }
  }

  // media query specific overrides

  // desktopish
  @media (min-width: 990px) {
    display: grid;
    grid-template-areas:
      "top top featured";
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-gap: @measure;

    #top-story {
      grid-area: top;
      padding-right: @measure;
      border-right: 1px solid @grey1;
      padding: 0 1.5rem 0 0!important;
      a.img {
        padding-bottom: 0.5 * @measure;
        border-bottom: 1px solid @grey1;
      }
      .inner {
        top: calc( -1 *  1170px * 0.66 * 0.15 );
        max-width: calc( 100% - ( 2 * @measure ) );
        padding: @measure;
        background: transparent;
        z-index: 1;
        border: none;

        &::before {
          display: block;
          box-sizing: border-box;
          content: "";
          height: calc( ( 1170px * 0.66 * 0.15 ) - ( 0.5 * @measure ) );

          position: absolute;
          top: 0.5 * @measure;
          left: 0.0 * @measure;
          right: 0.0 * @measure;
          z-index: -1;

          background: white;
          border-color: @white;
          border-style: solid;
          border-width: @measure * 0.5;
          border-bottom-width: 1px;

          // this only works because of the combination of this specific image and border-image-slice
          // https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-slice
          // https://github.com/INN/umbrella-citylimits/pull/61#issuecomment-542890018
          border-image: url("../../../img/homepage-border-img.png");
          border-image-slice: 24 24 1 24;
          border-image-repeat: space;
        }
      }
      .top-tag {
        margin-top: -1 * @measure;
      }
    }
    #featured {
      grid-area: featured;
    }
    article {
      padding-bottom: @measure;
      margin-bottom: 0;
      padding: 1.5rem 0 1.5rem 1.5rem;
      border-bottom: none;
      & + .widget,
      & + article {
        border-top: 1px solid @grey1;
        padding-top: @measure;
        padding: 1.5rem 0 1.5rem 1.5rem;
      }
    }
  }

  // tabletish
  @media (min-width: 600px ) and  (max-width: 989px) {
    display: grid;
    grid-template-areas:
      "img img inner"
      "one two three";
    grid-gap: @measure;
    #top-story {
      display: contents;
      .img {
        grid-area: img;
        justify-self: center;
        align-self: center;
      }
      .inner {
        grid-area: inner;
        border-left: none;
        border-bottom: 1px solid @grey1;
      }
      h2 {
        font-size: 1.75rem;
      }
    }
    #featured {
      display: contents;
      :nth-child(1) {
        grid-area: one;
      }
      :nth-child(2) {
        grid-area: two;
      }
      :nth-child(3) {
        grid-area: three;
      }
    }
  }

  // phoneish
  @media (max-width: 600px) {
    display: block;

    .inner {
      margin-top: 0.5 * @measure;
      border-bottom: 1px solid @grey1;
      .byline {
        margin-bottom: @measure;
      }
    }
    #top-story {
      .top-tag {
        margin-top: -1.0 * @measure;
      }
      .inner {
        border-left: 0!important;
        border-right: 0!important;
      }
    }

    article {
      padding-bottom: @measure;
      margin-bottom: 0;

      border-bottom: none;
      & + .widget,
      & + article {
        border-top: 1px solid @grey1;
        padding-top: @measure;
      }
      .top-tag {
        margin-bottom: 20px;
      }
      .excerpt {
        display: none;
      }
    }
  }
}

/**
 * Styles specific to widgets on the homepage bottom area
 *
 * May need to be copied out of homepage-bottom at some point.
 */
#widget-area {
  .largo-recent-posts {
    padding: 0;
    box-sizing: border-box;

    // how we get the widget title to have a vertical bar to the right, and a long line off to the right
    .widgettitle {
      position: relative;
      top: -1rem;
      line-height: 2rem;

      border-right: 1px solid @grey1;
      padding-right: @measure + 1;
      width: auto;
      display: inline-block;
      clear: both;

      background-color: @white;
      font-size: 1rem;
      vertical-align: middle;

      text-transform: uppercase;
      color: @black;
    }

    position: relative;
    .bracket-border-before();
    padding-bottom: 2 * @measure;
    @media (max-width: 767px) {
      padding-bottom: 0.5 * @measure;
    }
    .bracket-border-after();
    margin-bottom: 2 * @measure;


    ul {
      li {
        &:first-of-type {
          h5.post-title {
            line-height: 1.4;
            font-size: 26px!important;
          }
        }
      }
      li {
        h5.post-title {
          margin-top: 1.5rem;
	        margin-bottom: 1.5rem;
          line-height: 1.6;
          font-size: 18px!important;
        }
        p {
          margin-top: 1.5rem;
          margin-bottom: 1.5rem;
        }
        h5.byline {
          margin-top: 0.5 * @measure;
          margin-bottom: 0;
        }
        .byline {
          font-size: 13px;
          font-family: @font-header;
        }
      }
    }

    @media (max-width: 767px) {
      margin-top: 2 * @measure;
      margin-bottom: 2 * @measure;

      ul {
        li {
          margin-bottom: @measure;
          h5.post-title {
            margin-bottom: 20px!important;
            line-height: 1.4;
          }
          p {
            display: none;
          }
        }
      }
      li:first-of-type {
        .top-tag {
          .tt-fancy();
          margin-top: -1 * @measure;
        }
      }
      li:not(:first-of-type) {
        .top-tag {
          .tt-plain();
        }
        a.img {
          max-width: 25%;
          float: right;
          margin-left: @measure;
          img {
            margin-top: 40%;
          }
        }
      }
      li:not(:last-of-type) {
        padding-bottom: @measure;
        border-bottom: 1px solid @grey1;
        margin-bottom: @measure;
      }
    } // end phone

    @media (min-width: 768px) {
      ul {
        display: grid;
        box-sizing: border-box;

        grid-template-areas:
          "a b c"
          "a d e"
        ;
        // what I would do if I could mix fr and rem:
        // grid-template-columns: calc( 5fr + @measure ) calc( 3fr + @measure + @measure ) calc( 3fr + @measure);
        // we want one @measure padding in these locations:
        //          here | here       here | here
        //       5       |        3        |       3    // column relative widths
        // that's four times in 100% of width
        // and then that remainder of 100% will be split 5:3:3 across the columns
        // so let's define a term for ( (100% - 4@measure) / ( 4 + 3 + 3 ) )
        // and use that as "1fr"
        //
        // note that this uses LESS escapes and interpolation in order to prevent a nasty thing
        // where ( 100% - 4*@measure )/11  gets simplified to (100 - 4)/11%
        // http://lesscss.org/features/#variables-feature-variable-interpolation
        @fr: ~"(   (100% - ( 4 * @{measure} ) )   /   ( 5 + 3 + 3 )   )";
        grid-template-columns:
          calc( ( 5 * @fr) + @measure )
          calc( ( 3 * @fr ) + @measure + @measure )
          calc( ( 3 * @fr ) + @measure)
        ;
        // and then let everyone's browser melt


        // these must remain 0; they're not accounted for in the above calculations
        // and also it would get in the way of placing borders
        grid-column-gap: 0;
        grid-row-gap: @measure;

        grid-template-rows: auto;
        justify-items: center;
        align-items: stretch;
        // in case this widget gets set to n>5 posts:
        grid-auto-columns: 1fr;
        grid-auto-rows: 1fr;
        grid-auto-flow: row;

        // grid items!
        li {
          box-sizing: border-box;
          position: relative;
          margin-bottom: @measure;

          &:nth-child( 1 ) {
            grid-area: a;
            padding-right: @measure;
            border-right: 1px solid @grey1;
          }
          &:nth-child( 2 ) {
            grid-area: b;
            padding-right: @measure;
            padding-left: @measure;
            border-right: 1px solid @grey1;
          }
          &:nth-child( 3 ) {
            grid-area: c;
            padding-left: @measure;
          }
          &:nth-child( 4 ) {
            grid-area: d;
            padding-right: @measure;
            padding-left: @measure;
            border-right: 1px solid @grey1;
          }
          &:nth-child( 5 ) {
            grid-area: e;
            padding-left: @measure;
          }

          // some light grey border-bottom
          &:nth-child( 2 ),
          &:nth-child( 3 ) {
            overflow: visible;
            &::after {
              content: "";
              display: block;
              clear: both;
              height: 1px;
              width: auto;
              box-sizing: border-box;
              background-color: @grey1;
              position: absolute;
              z-index: 1;
              bottom: -1 * @measure;
            }
          }
          &:nth-child( 2 )::after {
            left: 1 * @measure;
            right: 0 * @measure;
          }
          &:nth-child( 3 )::after {
            left: 0 * @measure;
            right: 0 * @measure;
          }

          &:nth-child( 2 ),
          &:nth-child( 3 ),
          &:nth-child( 4 ),
          &:nth-child( 5 ) {
            h5.post-title {
              font-size: 100%;
            }
            p { // excerpt
              display: none;
            }
          }

          img {
            padding: 0;
          }
          .top-tag {
            .tt-fancy();
            margin-top: -1 * @measure;
            position: relative;
          }
        }
      }
    } // media query for desktop
  }
  .widget + .widget {
    @media (max-width: 600px) {
      margin-top: 20px;
    }
  }
}
